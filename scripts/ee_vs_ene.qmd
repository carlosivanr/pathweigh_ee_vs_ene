---
title: "Eligible & Enrolled vs Eligible & Not Enrolled"
format: 
  docx:
    toc: true
    number-sections: true
execute:
    #echo: false
    warning: false
    
echo: false    
    
---

```{r}
# Load Packages ----------------------------------------------------------------
pacman::p_load(here,         # For managing directory paths
               magrittr,     # For the assignment pipe operator %<>%
               tidyverse,    # For data manipulation tools
               data.table,   # For reading .csv files
               openxlsx,     # For reading .xlsx files
               tictoc,       # For timing and benchmarking functions
               gtsummary,    # For creating tables
               flextable,    # For the autofit function
               furrr)        # For parallel processing

# Set parallel processing
plan(multisession, workers = 4)
```


```{r}
## Load seq_df2 ----------------------------------------------------------------
# Keep in workspace as a back up
load(here("data", "ee_vs_ene_processed.rda"))
```

```{r create table to word function}
# This function will modify the output dimensions of the flextables
fit_flextable_wordpage <- function(ft, pgwidth = 7){
  ft_out <- ft %>% autofit()
  ft_out <- width(ft_out, 
                  width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}
```

# Demographics
```{r}
# Table 1 demographics
tab1.a <- data %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Enrolled) %>%
  tbl_summary(by = Enrolled,
              statistic = list(all_continuous() ~ "{mean} ({sd})"),
              label = list(Race_Ethnicity ~ "Race/Ethnicity",
                           Age ~ "Age (years)"),
              missing = "no",
              sort = list(everything() ~ "frequency")) %>%
  #add_n(statistic="{N_miss} ({p_miss}%)") %>%
  #modify_header(n = "**N missing (%)**") %>%
  bold_labels() %>%
  add_p(test = list(all_continuous() ~ "t.test")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Overall**")


#Table generating function
make_sub_tab1 <- function(cohort){
  table <- data[data$Cohort == cohort,] %>%
    select(Age, Sex, Race_Ethnicity, Insurance, Enrolled) %>%
    tbl_summary(by = Enrolled,
                statistic = list(all_continuous() ~ "{mean} ({sd})"),
                label = list(Race_Ethnicity ~ "Race/Ethnicity",
                             Age ~ "Age (years)"),
                missing = "no",
                sort = list(everything() ~ "frequency")) %>%
    #add_n(statistic="{N_miss} ({p_miss}%)") %>%
    #modify_header(n = "**N missing (%)**") %>%
    bold_labels() #%>%
  #add_overall()

  return(table)

  }

# Apply table generating function to all cohorts
cohorts <- c("Cohort 1", "Cohort 2", "Cohort 3")

tab1_sub_tables <- map(cohorts, make_sub_tab1)
        

# Merge all Table 1 sub tables
tab1 <- tbl_merge(tbls = list(tab1.a, 
                              tab1_sub_tables[[1]], 
                              tab1_sub_tables[[2]], 
                              tab1_sub_tables[[3]]),
          tab_spanner = c("**Overall**", 
                          "**Sequence 1**", 
                          "**Sequence 2**", 
                          "**Sequence 3**"))

# Save Table 1
# tab1 %>%
#     as_gt() %>%
#     gt::gtsave(
#       filename = here("tables", "ee_vs_ene_table_1.pdf"))

tab1 %>%
  as_flex_table() %>% 
  fit_flextable_wordpage()
```

\newpage

# Patient Health Characteristics
```{r}
# Patient Health Characteristics --------------------------------------
tab2_cols <- names(data %>% select(Height, Weight_kgs, BMI, HeartRate, Respiratoryrate,
                            Systolic_blood_pressure, Diastolic_blood_pressure, Temperature,
                            TSH, Triglycerides, HDL, ALT, AST, A1C, eGFR, N_MedsWeightGain_period,
                            N_MedsWeightLoss_period, O2CPAPBIPAP, PHQ2_Completed, PHQ8, PHQ9, GAD7, 
                            SmokingStatus, Enrolled))

tab2.a <- data %>%
  select(all_of(tab2_cols)) %>%
    tbl_summary(by = Enrolled,
                label = list(Height ~ "Height (cm)",
                             Weight_kgs ~ "Weight (kg)",
                             BMI ~ "BMI (kg/m^2)",
                             HeartRate ~ "Heart Rate (bpm)",
                             Respiratoryrate ~ "Respiratory Rate (rpm)",
                             Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                             Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                             N_MedsWeightGain_period ~ "Using meds that cause weight gain",
                             N_MedsWeightLoss_period ~ "Using meds that cause weight loss",
                             O2CPAPBIPAP ~ "O2/CPAP/BIPAP Users",
                             PHQ2_Completed ~ "PHQ2 Completed",
                             SmokingStatus ~ "Smoking Status",
                             Temperature ~ "Temperature (F)"),
                #type = list(all_continuous() ~ "continuous2"),
                missing = "no",
                statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                sort = list(everything() ~ "frequency")) %>%
  #add_n(statistic="{N_miss} ({p_miss}%)") %>%
  #modify_header(n = "**N missing (%)**") %>%
  bold_labels()  %>%
  add_p(test = list(all_continuous() ~ "t.test")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Overall**")

# #Table 2 generating function
make_sub_tab2 <- function(cohort){
  table <- data[data$Cohort == cohort,] %>%
    select(all_of(tab2_cols)) %>%
    tbl_summary(by = Enrolled,
                label = list(Height ~ "Height (cm)",
                             Weight_kgs ~ "Weight (kg)",
                             BMI ~ "BMI (kg/m^2)",
                             HeartRate ~ "Heart Rate (bpm)",
                             Respiratoryrate ~ "Respiratory Rate (rpm)",
                             Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                             Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                             N_MedsWeightGain_period ~ "Using meds that cause weight gain",
                             N_MedsWeightLoss_period ~ "Using meds that cause weight loss",
                             O2CPAPBIPAP ~ "O2/CPAP/BIPAP Users",
                             SmokingStatus ~ "Smoking Status",
                             PHQ2_Completed ~ "PHQ2 Completed",
                             Temperature ~ "Temperature (F)"),
                #type = list(all_continuous() ~ "continuous2"),
                missing = "no",
                statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                sort = list(everything() ~ "frequency")) %>%
    #add_n(statistic="{N_miss} ({p_miss}%)") %>%
    #modify_header(n = "**N missing (%)**") %>%
    bold_labels()

  return(table)

}

# Apply table generating function to all cohorts
tab2_sub_tables <- future_map(cohorts, make_sub_tab2)

# Merge all Table 1 sub tables
tab2 <- tbl_merge(tbls = list(tab2.a,
                              tab2_sub_tables[[1]],
                              tab2_sub_tables[[2]],
                              tab2_sub_tables[[3]]),
                  tab_spanner = c("**Overall**",
                                  "**Sequence 1**",
                                  "**Sequence 2**",
                                  "**Sequence 3**"))

# tab2 %>%
#   as_gt() %>%
#   gt::gtsave(
#     filename = here("tables", "ee_vs_ene_table_2.pdf"))

tab2 %>%
  as_flex_table() %>% 
  fit_flextable_wordpage()
```

\newpage

# Comorbidities
```{r}
# Comorbidities --------------------------------------
# Load the top comorbidities .csv file
top_comorbidities <- read.csv(here("../baseline_characteristics/working_files/top_comorbidities_220121.csv"))
newnames <- top_comorbidities$disease.state
oldnames <- gsub(" ", ".", top_comorbidities$disease.state)

tab3.a <- data %>%
  select(all_of(top_comorbidities$disease.state), Enrolled) %>%
  select(-Asthma, -`Vitamin D deficiency`) %>%
  tbl_summary(by = Enrolled) %>%
  add_p(test = list(all_continuous() ~ "t.test")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Overall**")

# #Table 3 generating function
make_sub_tab3 <- function(cohort){
  table <- data[data$Cohort == cohort,] %>%
    select(all_of(top_comorbidities$disease.state), Enrolled) %>%
    select(-Asthma, -`Vitamin D deficiency`) %>%
    tbl_summary(by = Enrolled) %>%
    bold_labels()
    
    return(table)
  
}

# Apply table generating function to all cohorts
tab3_sub_tables <- future_map(cohorts, make_sub_tab3)

# Merge all Table 1 sub tables
tab3 <- tbl_merge(tbls = list(tab3.a,
                              tab3_sub_tables[[1]],
                              tab3_sub_tables[[2]],
                              tab3_sub_tables[[3]]),
                  tab_spanner = c("**Overall**",
                                  "**Sequence 1**",
                                  "**Sequence 2**",
                                  "**Sequence 3**"))

tab3 %>%
  as_flex_table() %>% 
  fit_flextable_wordpage()
```

\newpage

# Referrals, Procedures, and Medications
```{r}
# Apply table generating function to all cohorts
cohorts <- c("Cohort 1", "Cohort 2", "Cohort 3")

# Referrals --------------------------------------
tab4.1.a <- data %>%
  select(Enrolled,Ref_BariatricSurgery:Ref_WellnessClinic, BariatricSurgery) %>%
  tbl_summary(by = Enrolled,
              type = all_continuous() ~ "continuous2",
              missing="ifany",
              label = list(Ref_BariatricSurgery ~ "Bariatrics",
                           Ref_BehavioralHealth ~ "Behavioral Health",
                           Ref_Endo ~ "Endocrinology",
                           Ref_Dietician ~ "Dietician",
                           Ref_WellnessClinic ~ "Health and Wellness",
                           BariatricSurgery ~ "Bariatric procedure performed")) %>%
  add_p(test = list(all_continuous() ~ "t.test")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Overall**")
# modify_header(label = "**Referrals**")


# #Table 4 generating function
make_sub_tab4.1 <- function(cohort){
  table <- data[data$Cohort == cohort,] %>%
    select(Enrolled,Ref_BariatricSurgery:Ref_WellnessClinic, BariatricSurgery) %>%
    tbl_summary(by = Enrolled,
                type = all_continuous() ~ "continuous2",
                missing="ifany",
                label = list(Ref_BariatricSurgery ~ "Bariatrics",
                             Ref_BehavioralHealth ~ "Behavioral Health",
                             Ref_Endo ~ "Endocrinology",
                             Ref_Dietician ~ "Dietician",
                             Ref_WellnessClinic ~ "Health and Wellness",
                             BariatricSurgery ~ "Bariatric procedure performed")) %>%
    bold_labels()
  
  return(table)
  
}


# Apply table generating function to all cohorts
tab4.1_sub_tables <- future_map(cohorts, make_sub_tab4.1)

# Merge all Table 1 sub tables
tab4.1 <- tbl_merge(tbls = list(tab4.1.a,
                              tab4.1_sub_tables[[1]],
                              tab4.1_sub_tables[[2]],
                              tab4.1_sub_tables[[3]]),
                  tab_spanner = c("**Overall**",
                                  "**Sequence 1**",
                                  "**Sequence 2**",
                                  "**Sequence 3**"))

# Version 2 of the meds table
# dat.AOM is supposed to be made from meds_AOM
# meds <- meds_AOM %>%
#   #select(-IndexDate, -Cohort) %>%
#   mutate(count = 1) %>%
#   pivot_wider(names_from = uniqueMedName, values_from = count) %>%
#   select(-IndexDate, -Cohort) %>%
#   distinct() %>%
#   group_by(Arb_PersonId) %>%
#   summarise_each(funs(sum(., na.rm = TRUE)))

# #################### FENCE ############################
ee_meds <- meds_AOM %>%
  filter(Arb_PersonId %in% (data %>% filter(Enrolled == "EE") %>% pull(Arb_PersonId)))

dat.AOM <- read.csv(here("../baseline_characteristics/data/220121_2020-03-17_to_2021-03-16_wpv1_AOM.csv"), header=TRUE,
                     colClasses=c("Arb_PersonId"="character"))

# is it some meds are double counted, or are the number of patients different?
#sum(dat.AOM$Arb_PersonId %in% ee_meds$Arb_PersonId)

# There are 17 Arb_PersonIds in ee_meds that are not in the dat.aom from bl_char
#sum(!ee_meds$Arb_PersonId %in% dat.AOM$Arb_PersonId)

missing_ids <- ee_meds %>% 
  filter(!Arb_PersonId %in% dat.AOM$Arb_PersonId)


meds_AOM %<>%
  filter(!Arb_PersonId %in% missing_ids$Arb_PersonId)

# #################### FENCE ############################

meds <- meds_AOM %>%
  #select(-IndexDate, -Cohort) %>%
  mutate(count = 1) %>%
  pivot_wider(names_from = uniqueMedName, values_from = count) %>%
  select(-IndexDate, -Cohort) %>%
  distinct() %>%
  group_by(Arb_PersonId) %>%
  summarise_each(funs(sum(., na.rm = TRUE)))

# Merge data and meds together
data <- left_join(data, meds, by = "Arb_PersonId")
#nrow(left_join(data, meds, by = "Arb_PersonId"))

#Make table 4.2.a
tab4.2.a <-  data %>%
  select(Enrolled, all_of(names(meds %>% select(-Arb_PersonId)))) %>%
  mutate_at(vars(all_of(names(meds %>% select(-Arb_PersonId)))),
            ~replace(., is.na(.),0)) %>%
  mutate_at(vars(all_of(names(meds %>% select(-Arb_PersonId)))),
            ~replace(., . == 2, 1)) %>%
  tbl_summary(by = Enrolled) %>%
  add_p(test = list(all_continuous() ~ "t.test")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Overall**") %>%
  bold_labels()





  # Table 4.2 generating function
  make_sub_tab4.2 <- function(cohort){
    table <- data[data$Cohort == cohort,] %>%
      select(Enrolled, all_of(names(meds %>% select(-Arb_PersonId)))) %>%
      mutate_at(vars(all_of(names(meds %>% select(-Arb_PersonId)))),
                ~replace(., is.na(.),0)) %>%
      mutate_at(vars(all_of(names(meds %>% select(-Arb_PersonId)))),
            ~replace(., . == 2, 1)) %>%
      tbl_summary(by = Enrolled) %>%
      bold_labels()
    
    return(table)
    
  }


  # Apply table generating function to all cohorts
  tab4.2_sub_tables <- future_map(cohorts, make_sub_tab4.2)
  
  # Merge all Table 1 sub tables
  tab4.2 <- tbl_merge(tbls = list(tab4.2.a,
                                  tab4.2_sub_tables[[1]],
                                  tab4.2_sub_tables[[2]],
                                  tab4.2_sub_tables[[3]]),
                      tab_spanner = c("**Overall**",
                                      "**Sequence 1**",
                                      "**Sequence 2**",
                                      "**Sequence 3**"))


tab4 <- tbl_stack(list(tab4.1, tab4.2))

tab4 %>%
  as_flex_table() %>% 
  fit_flextable_wordpage()
```

